android.support.v13.app.FragmentCompat -> android.support.v13.app.a:
    android.support.v13.app.FragmentCompat$FragmentCompatImpl IMPL -> a
    void setMenuVisibility(android.app.Fragment,boolean) -> a
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl -> android.support.v13.app.b:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompat$FragmentCompatImpl -> android.support.v13.app.c:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl -> android.support.v13.app.d:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl -> android.support.v13.app.e:
    void setUserVisibleHint(android.app.Fragment,boolean) -> b
android.support.v13.app.FragmentCompatICS -> android.support.v13.app.f:
    void setMenuVisibility(android.app.Fragment,boolean) -> a
android.support.v13.app.FragmentCompatICSMR1 -> android.support.v13.app.g:
    void setUserVisibleHint(android.app.Fragment,boolean) -> a
android.support.v13.app.FragmentStatePagerAdapter -> android.support.v13.app.h:
    android.app.FragmentManager mFragmentManager -> b
    android.app.FragmentTransaction mCurTransaction -> c
    java.util.ArrayList mSavedState -> d
    java.util.ArrayList mFragments -> e
    android.app.Fragment mCurrentPrimaryItem -> f
    android.app.Fragment getItem(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(int,java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> a
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.i:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.j:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.a:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.b:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.c:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.util.ArrayList mSharedElementSourceNames -> t
    java.util.ArrayList mSharedElementTargetNames -> u
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> a
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> b
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack$270db671(android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    void access$200$4a5f5891(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    android.view.View getView() -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.e:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.f:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.g:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.h:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.i:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> aa
    java.lang.Object USE_DEFAULT_TRANSITION -> a
    int mState -> b
    android.view.View mAnimatingAway -> c
    int mStateAfterAnimating -> d
    android.os.Bundle mSavedFragmentState -> e
    android.util.SparseArray mSavedViewState -> f
    int mIndex -> g
    java.lang.String mWho -> h
    android.os.Bundle mArguments -> i
    android.support.v4.app.Fragment mTarget -> j
    int mTargetIndex -> k
    int mTargetRequestCode -> l
    boolean mAdded -> m
    boolean mRemoving -> n
    boolean mResumed -> o
    boolean mFromLayout -> p
    boolean mInLayout -> q
    boolean mRestored -> r
    int mBackStackNesting -> s
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> t
    android.support.v4.app.FragmentActivity mActivity -> u
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> v
    android.support.v4.app.Fragment mParentFragment -> w
    int mFragmentId -> x
    int mContainerId -> y
    java.lang.String mTag -> z
    boolean mHidden -> A
    boolean mDetached -> B
    boolean mRetainInstance -> C
    boolean mRetaining -> D
    boolean mHasMenu -> E
    boolean mMenuVisible -> F
    boolean mCalled -> G
    int mNextAnim -> H
    android.view.ViewGroup mContainer -> I
    android.view.View mView -> J
    android.view.View mInnerView -> K
    boolean mDeferStart -> L
    boolean mUserVisibleHint -> M
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> N
    boolean mLoadersStarted -> O
    boolean mCheckedForLoaderManager -> P
    java.lang.Object mEnterTransition -> Q
    java.lang.Object mReturnTransition -> R
    java.lang.Object mExitTransition -> S
    java.lang.Object mReenterTransition -> T
    java.lang.Object mSharedElementEnterTransition -> U
    java.lang.Object mSharedElementReturnTransition -> V
    java.lang.Boolean mAllowReturnTransitionOverlap -> W
    java.lang.Boolean mAllowEnterTransitionOverlap -> X
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> Y
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> Z
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void onHiddenChanged$1385ff() -> a
    void onActivityResult$6eb84b52() -> b
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> c
    android.view.animation.Animation onCreateAnimation$24236ca7() -> d
    void onViewCreated$65f1d89() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void onDestroyOptionsMenu() -> f
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void instantiateChildFragmentManager() -> g
    android.view.View performCreateView$469ccb8a() -> h
    void performStart() -> i
    void performSaveInstanceState(android.os.Bundle) -> a
    void performReallyStop() -> j
    void performDestroy() -> k
android.support.v4.app.Fragment$1 -> android.support.v4.app.j:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.k:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.l:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.m:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$2cd5ab55(java.lang.String) -> b
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.n:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.o:
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.p:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.q:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> n
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> c
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> c
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void dispatchCreate() -> g
    void dispatchActivityCreated() -> h
    void dispatchStart() -> i
    void dispatchResume() -> j
    void dispatchStop() -> k
    void dispatchDestroy() -> l
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> m
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> b
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.s:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.t:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.u:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.v:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.w:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.x:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.y:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.z:
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map) -> a
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    void setEpicenter(java.lang.Object,android.view.View) -> a
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> a
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> a
    void findNamedViews(java.util.Map,android.view.View) -> a
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.aa:
    android.graphics.Rect val$epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.ab:
    android.view.View val$container -> a
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> b
    java.util.Map val$nameOverrides -> c
    java.util.Map val$renamedViews -> d
    android.transition.Transition val$enterTransition -> e
    java.util.ArrayList val$enteringViews -> f
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.ac:
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> a
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.ad:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$enteringViews -> d
    android.transition.Transition val$exitTransition -> e
    java.util.ArrayList val$exitingViews -> f
    android.transition.Transition val$sharedElementTransition -> g
    java.util.ArrayList val$sharedElementTargets -> h
    java.util.Map val$renamedViews -> i
    java.util.ArrayList val$hiddenViews -> j
    android.transition.Transition val$overallTransition -> k
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.ae:
    android.view.View epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.af:
    android.view.View getView() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.ag:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ah:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ai:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.aj:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.ak:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.al:
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.am:
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.an:
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ao:
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ap:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.aq:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.ar:
    android.app.Notification$Builder getBuilder() -> a
android.support.v4.app.NotificationCompat -> android.support.v4.app.as:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.at:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> e
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.au:
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.av:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aw:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ax:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mShowWhen -> k
    boolean mUseChronometer -> l
    android.support.v4.app.NotificationCompat$Style mStyle -> m
    java.lang.CharSequence mSubText -> n
    int mProgressMax -> o
    int mProgress -> p
    boolean mProgressIndeterminate -> q
    java.lang.String mGroupKey -> r
    boolean mGroupSummary -> s
    java.lang.String mSortKey -> t
    java.util.ArrayList mActions -> u
    boolean mLocalOnly -> v
    java.lang.String mCategory -> w
    android.os.Bundle mExtras -> x
    int mColor -> y
    int mVisibility -> z
    android.app.Notification mPublicVersion -> A
    android.app.Notification mNotification -> B
    java.util.ArrayList mPeople -> C
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> a
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> d
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ay:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.az:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.ba:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.bb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.bc:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.bd:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.be:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.bf:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.bg:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.bh:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.bi:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.bj:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.bk:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.bl:
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.bm:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.bn:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.bo:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> e
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.bp:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.bq:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.br:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.bs:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bt:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    android.os.Bundle getExtras(android.app.Notification) -> a
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.bu:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.bv:
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.bw:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.RemoteInput -> android.support.v4.app.bx:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.by:
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.bz:
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.ca:
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.cb:
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.cc:
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.cd:
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.ce:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.cf:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.cg:
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.ch:
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.SharedElementCallback -> android.support.v4.app.ci:
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.cj:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.ck:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    java.util.Iterator iterator() -> iterator
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.cl:
    android.app.PendingIntent getPendingIntent$3140f641$4db319f5(android.content.Context,android.content.Intent[]) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.cm:
    android.app.PendingIntent getPendingIntent$3140f641$4db319f5(android.content.Context,android.content.Intent[]) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.cn:
    android.app.PendingIntent getPendingIntent$3140f641$4db319f5(android.content.Context,android.content.Intent[]) -> a
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.co:
    android.app.PendingIntent getActivitiesPendingIntent$1ed1578d(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatApi21 -> android.support.v4.a.a:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.IntentCompat -> android.support.v4.a.b:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.a.c:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.a.d:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.a.e:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.a.f:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.a.g:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.a.h:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    java.lang.String toString() -> toString
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.i:
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    android.os.Bundle mBundle -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.a:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.b:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.a:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.b:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> a
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> a
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> c
    void gc() -> d
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
    void startTracking(android.view.KeyEvent) -> c
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> c
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb(int,java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> a
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition$5d527804() -> d
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.af:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ag:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ah:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ai:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.aj:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ak:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.al:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.am:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.an:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ao:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ap:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.aq:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> g
android.support.v4.view.ViewCompat$Api21ViewCompatImpl -> android.support.v4.view.ar:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.as:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.at:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.au:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.av:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.aw:
    boolean accessibilityDelegateCheckFailed -> b
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ax:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    boolean getFitsSystemWindows(android.view.View) -> g
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ay:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.az:
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ba:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bb:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bc:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bd:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.be:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bf:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    boolean getFitsSystemWindows(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bg:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bh:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bi:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bj:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.bk:
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.bl:
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bm:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bn:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> d
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem$2563266(int) -> setCurrentItem$2563266
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> e
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> c
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> f
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> d
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> i
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bo:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bp:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.br:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bs:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bt:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bu:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bv:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bw:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bx:
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.by:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bz:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ca:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    void addAction(int) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.b:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent$55687d21(java.lang.Object) -> p
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.d:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void setParent$55687d21(java.lang.Object) -> p
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.e:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.f:
    java.lang.String getViewIdResourceName(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.g:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.h:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent$55687d21(java.lang.Object) -> p
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.i:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setParent$55687d21(java.lang.Object) -> p
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> b
    java.lang.Object mProvider -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> a
    boolean performAction$5985f823() -> b
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus$f3a5639() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    java.lang.Object findFocus$54cf32c4() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.w:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object findFocus$54cf32c4() -> d
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.x:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.y:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.z:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.aa:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ab:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> e
    boolean CAN_HIDE_DESCENDANTS -> f
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> g
    int mMinDrawerMargin -> h
    int mScrimColor -> i
    float mScrimOpacity -> j
    android.graphics.Paint mScrimPaint -> k
    android.support.v4.widget.ViewDragHelper mLeftDragger -> a
    android.support.v4.widget.ViewDragHelper mRightDragger -> b
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> l
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> m
    int mDrawerState -> c
    boolean mInLayout -> n
    boolean mFirstLayout -> o
    int mLockModeLeft -> p
    int mLockModeRight -> q
    boolean mDisallowInterceptRequested -> r
    boolean mChildrenCanceledTouch -> s
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> t
    float mInitialMotionX -> u
    float mInitialMotionY -> v
    android.graphics.drawable.Drawable mShadowLeft -> w
    android.graphics.drawable.Drawable mShadowRight -> x
    android.graphics.drawable.Drawable mStatusBarBackground -> y
    java.lang.Object mLastInsets -> z
    boolean mDrawStatusBarBackground -> A
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> d
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> b
    int getDrawerViewAbsoluteGravity(android.view.View) -> f
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> b
    android.view.View findDrawerWithGravity(int) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> g
    boolean isDrawerView(android.view.View) -> c
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> a
    boolean access$400(android.view.View) -> e
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.a:
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.b:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.c:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.d:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.e:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.f:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.g:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.h:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.i:
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.j:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.l:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.m:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.n:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.o:
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> a
    int getCurrX() -> a
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.p:
    int getCurrX$5d527804() -> a
    int getCurrY$5d527804() -> b
    boolean computeScrollOffset$5d527815() -> c
    int getFinalX$5d527804() -> d
    int getFinalY$5d527804() -> e
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96$134632() -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> a
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> b
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> n
    int[] mEdgeDragsInProgress -> o
    int[] mEdgeDragsLocked -> p
    int mPointersDown -> h
    android.view.VelocityTracker mVelocityTracker -> i
    float mMaxVelocity -> q
    float mMinVelocity -> r
    int mEdgeSize -> j
    int mTrackingEdges -> k
    android.support.v4.widget.ScrollerCompat mScroller -> s
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> t
    android.view.View mCapturedView -> l
    boolean mReleaseInProgress -> m
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    void captureChildView(android.view.View,int) -> a
    void cancel() -> a
    void abort() -> b
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling$138603() -> c
    void dispatchViewReleased$2548a35(float) -> a
    void clearMotionHistory(int) -> a
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop$17e2abff(android.view.View,float) -> a
    void releaseViewForPointerUp() -> d
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> a
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> b
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
com.giorgioaresu.batchrenamer.AboutActivity -> com.giorgioaresu.batchrenamer.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.giorgioaresu.batchrenamer.AboutActivity$AboutFragment -> com.giorgioaresu.batchrenamer.a:
    com.giorgioaresu.batchrenamer.Eula eula -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
com.giorgioaresu.batchrenamer.AboutActivity$AboutFragment$1 -> com.giorgioaresu.batchrenamer.b:
    android.app.Activity val$activity -> a
    com.giorgioaresu.batchrenamer.AboutActivity$AboutFragment this$0 -> b
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.giorgioaresu.batchrenamer.Application -> com.giorgioaresu.batchrenamer.Application:
    android.content.Context mContext -> a
    android.content.Context getContext() -> a
    void onCreate() -> onCreate
com.giorgioaresu.batchrenamer.Debug -> com.giorgioaresu.batchrenamer.c:
    boolean debug -> a
    boolean debugToFile -> b
    int logTypes -> c
    com.giorgioaresu.batchrenamer.Debug$OnLogListener logListener -> d
    void setDebugToFile(boolean) -> a
    void logCommon(int,java.lang.String,java.lang.String) -> a
    boolean isExternalStorageWritable() -> a
    void log(java.lang.String) -> a
    void log(java.lang.Class,java.lang.String) -> a
    void logError(java.lang.String) -> b
    void logError(java.lang.String,java.lang.Exception) -> a
    void logError(java.lang.Class,java.lang.String) -> b
    void logError(java.lang.Class,java.lang.String,java.lang.Exception) -> a
com.giorgioaresu.batchrenamer.Debug$OnLogListener -> com.giorgioaresu.batchrenamer.d:
com.giorgioaresu.batchrenamer.DynamicListView -> com.giorgioaresu.batchrenamer.DynamicListView:
    int SMOOTH_SCROLL_AMOUNT_AT_EDGE -> a
    int MOVE_DURATION -> b
    int mLastEventY -> c
    int mDownY -> d
    int mDownX -> e
    int mTotalOffset -> f
    boolean mCellIsMobile -> g
    boolean mIsMobileScrolling -> h
    int mSmoothScrollAmountAtEdge -> i
    com.giorgioaresu.batchrenamer.Rule mAboveItem -> j
    com.giorgioaresu.batchrenamer.Rule mMobileItem -> k
    com.giorgioaresu.batchrenamer.Rule mBelowItem -> l
    android.graphics.drawable.BitmapDrawable mHoverCell -> m
    android.graphics.Rect mHoverCellCurrentBounds -> n
    android.graphics.Rect mHoverCellOriginalBounds -> o
    int INVALID_POINTER_ID -> p
    int mActivePointerId -> q
    boolean mIsWaitingForScrollFinish -> r
    int mScrollState -> s
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> t
    android.animation.TypeEvaluator sBoundEvaluator -> u
    android.widget.AbsListView$OnScrollListener mScrollListener -> v
    void init(android.content.Context) -> a
    void updateNeighborViews(com.giorgioaresu.batchrenamer.Rule) -> b
    android.view.View getView(com.giorgioaresu.batchrenamer.Rule) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleCellSwitch() -> a
    void touchEventsEnded() -> b
    void touchEventsCancelled() -> c
    void handleMobileCellScroll() -> d
    int access$002(com.giorgioaresu.batchrenamer.DynamicListView,int) -> a
    int access$100(com.giorgioaresu.batchrenamer.DynamicListView) -> a
    int access$200(com.giorgioaresu.batchrenamer.DynamicListView) -> b
    com.giorgioaresu.batchrenamer.Rule access$302(com.giorgioaresu.batchrenamer.DynamicListView,com.giorgioaresu.batchrenamer.Rule) -> a
    android.graphics.drawable.BitmapDrawable access$402(com.giorgioaresu.batchrenamer.DynamicListView,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.BitmapDrawable access$500(com.giorgioaresu.batchrenamer.DynamicListView,android.view.View) -> a
    boolean access$602$309c388c(com.giorgioaresu.batchrenamer.DynamicListView) -> c
    com.giorgioaresu.batchrenamer.Rule access$300(com.giorgioaresu.batchrenamer.DynamicListView) -> d
    void access$700(com.giorgioaresu.batchrenamer.DynamicListView,com.giorgioaresu.batchrenamer.Rule) -> b
    int access$000(com.giorgioaresu.batchrenamer.DynamicListView) -> e
    com.giorgioaresu.batchrenamer.Rule access$802$44cfb516(com.giorgioaresu.batchrenamer.DynamicListView) -> f
    com.giorgioaresu.batchrenamer.Rule access$902$44cfb516(com.giorgioaresu.batchrenamer.DynamicListView) -> g
    int access$1002(com.giorgioaresu.batchrenamer.DynamicListView,int) -> b
    boolean access$600(com.giorgioaresu.batchrenamer.DynamicListView) -> h
    boolean access$1100(com.giorgioaresu.batchrenamer.DynamicListView) -> i
    void access$1200(com.giorgioaresu.batchrenamer.DynamicListView) -> j
    boolean access$1300(com.giorgioaresu.batchrenamer.DynamicListView) -> k
    void access$1400(com.giorgioaresu.batchrenamer.DynamicListView) -> l
    void access$1500(com.giorgioaresu.batchrenamer.DynamicListView) -> m
com.giorgioaresu.batchrenamer.DynamicListView$1 -> com.giorgioaresu.batchrenamer.e:
    com.giorgioaresu.batchrenamer.DynamicListView this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.giorgioaresu.batchrenamer.DynamicListView$2 -> com.giorgioaresu.batchrenamer.f:
    android.view.ViewTreeObserver val$observer -> a
    com.giorgioaresu.batchrenamer.Rule val$switchItem -> b
    int val$deltaY -> c
    int val$switchViewStartTop -> d
    com.giorgioaresu.batchrenamer.DynamicListView this$0 -> e
    boolean onPreDraw() -> onPreDraw
com.giorgioaresu.batchrenamer.DynamicListView$3 -> com.giorgioaresu.batchrenamer.g:
    com.giorgioaresu.batchrenamer.DynamicListView this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.giorgioaresu.batchrenamer.DynamicListView$4 -> com.giorgioaresu.batchrenamer.h:
    android.view.View val$mobileView -> a
    com.giorgioaresu.batchrenamer.DynamicListView this$0 -> b
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.giorgioaresu.batchrenamer.DynamicListView$5 -> com.giorgioaresu.batchrenamer.i:
    int interpolate(int,int,float) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.giorgioaresu.batchrenamer.DynamicListView$6 -> com.giorgioaresu.batchrenamer.j:
    int mPreviousFirstVisibleItem -> b
    int mPreviousVisibleItemCount -> c
    int mCurrentFirstVisibleItem -> d
    int mCurrentVisibleItemCount -> e
    int mCurrentScrollState -> f
    com.giorgioaresu.batchrenamer.DynamicListView this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.giorgioaresu.batchrenamer.Eula -> com.giorgioaresu.batchrenamer.k:
    android.app.AlertDialog dialog -> a
    void show(boolean,android.app.Activity) -> a
    void dismiss() -> a
com.giorgioaresu.batchrenamer.Eula$1 -> com.giorgioaresu.batchrenamer.l:
    com.giorgioaresu.batchrenamer.Eula this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.Eula$2 -> com.giorgioaresu.batchrenamer.m:
    android.app.Activity val$activity -> a
    com.giorgioaresu.batchrenamer.Eula this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.Eula$3 -> com.giorgioaresu.batchrenamer.n:
    android.app.Activity val$activity -> a
    com.giorgioaresu.batchrenamer.Eula this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.File -> com.giorgioaresu.batchrenamer.File:
    android.net.Uri fileUri -> a
    java.lang.String oldName -> b
    java.lang.String newName -> c
    com.giorgioaresu.batchrenamer.File$RENAME status -> d
    java.util.Map files -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void prepareForConflictFreeName() -> a
    java.lang.String conflictFreeName(java.lang.String) -> a
    com.giorgioaresu.batchrenamer.File$RENAME rename() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.giorgioaresu.batchrenamer.File$1 -> com.giorgioaresu.batchrenamer.o:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.giorgioaresu.batchrenamer.File$RENAME -> com.giorgioaresu.batchrenamer.p:
    com.giorgioaresu.batchrenamer.File$RENAME SUCCESSFUL -> a
    com.giorgioaresu.batchrenamer.File$RENAME FAILED_GENERIC -> b
    com.giorgioaresu.batchrenamer.File$RENAME FAILED_NOSOURCEFILE -> c
    com.giorgioaresu.batchrenamer.File$RENAME FAILED_PERMISSION -> d
    com.giorgioaresu.batchrenamer.File$RENAME FAILED_DESTINATIONEXISTS -> e
    int id -> f
    com.giorgioaresu.batchrenamer.File$RENAME[] $VALUES -> g
    com.giorgioaresu.batchrenamer.File$RENAME[] values() -> values
    com.giorgioaresu.batchrenamer.File$RENAME valueOf(java.lang.String) -> valueOf
    boolean compare(int) -> a
    com.giorgioaresu.batchrenamer.File$RENAME getValue(int) -> b
com.giorgioaresu.batchrenamer.FileAdapter -> com.giorgioaresu.batchrenamer.q:
    android.content.Context context -> a
    int layoutResourceId -> b
    java.util.ArrayList files -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.giorgioaresu.batchrenamer.FileAdapter$FileHolder -> com.giorgioaresu.batchrenamer.r:
    android.widget.TextView currentName -> a
    android.widget.TextView newName -> b
    android.view.View statusView -> c
com.giorgioaresu.batchrenamer.FilePreview_ListFragment -> com.giorgioaresu.batchrenamer.FilePreview_ListFragment:
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean handleSendIntent(android.content.Intent) -> a
    boolean handleSendMultipleIntent(android.content.Intent) -> b
    android.net.Uri decodeUri(android.net.Uri) -> a
com.giorgioaresu.batchrenamer.FileStatus_ListFragment -> com.giorgioaresu.batchrenamer.FileStatus_ListFragment:
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.giorgioaresu.batchrenamer.File_ListFragment -> com.giorgioaresu.batchrenamer.s:
    com.giorgioaresu.batchrenamer.File_ListFragment$FileFragmentInterface mInterface -> d
    java.util.ArrayList mFiles -> a
    java.lang.Object mLock -> e
    int defaultItemLayout -> f
    int defaultFragmentLayout -> g
    int itemLayout -> b
    int fragmentLayout -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void clear() -> a
    void add(com.giorgioaresu.batchrenamer.File) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
com.giorgioaresu.batchrenamer.File_ListFragment$FileFragmentInterface -> com.giorgioaresu.batchrenamer.t:
    void onFileSelected(com.giorgioaresu.batchrenamer.File) -> a
com.giorgioaresu.batchrenamer.JSONUtil -> com.giorgioaresu.batchrenamer.u:
    int indexOf(org.json.JSONArray,java.lang.String,java.lang.String) -> a
    boolean has(org.json.JSONArray,java.lang.String,java.lang.String) -> b
    org.json.JSONArray remove(org.json.JSONArray,int) -> a
com.giorgioaresu.batchrenamer.MainActivity -> com.giorgioaresu.batchrenamer.MainActivity:
    java.util.GregorianCalendar expDate -> a
    java.util.GregorianCalendar now -> b
    java.io.File scriptFile -> c
    com.giorgioaresu.batchrenamer.Rule_ListFragment ruleList_fragment -> e
    com.giorgioaresu.batchrenamer.FilePreview_ListFragment filePreviewList_fragment -> d
    com.giorgioaresu.batchrenamer.UpdateFileNames_AsyncTask updateFileNames_asyncTask -> f
    com.giorgioaresu.batchrenamer.MainActivity$UpdatingFilenamesGuiHolder guiHolder -> g
    com.giorgioaresu.batchrenamer.Eula eula -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void handleUnsupportedObject(android.content.Intent) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void loadFavorite() -> b
    void onFileSelected(com.giorgioaresu.batchrenamer.File) -> a
    void startFileNamesUpdate() -> a
    void access$000(com.giorgioaresu.batchrenamer.MainActivity,android.content.SharedPreferences,org.json.JSONArray,java.lang.String) -> a
    com.giorgioaresu.batchrenamer.Rule_ListFragment access$100(com.giorgioaresu.batchrenamer.MainActivity) -> a
    com.giorgioaresu.batchrenamer.FilePreview_ListFragment access$200(com.giorgioaresu.batchrenamer.MainActivity) -> b
    com.giorgioaresu.batchrenamer.MainActivity$UpdatingFilenamesGuiHolder access$300(com.giorgioaresu.batchrenamer.MainActivity) -> c
com.giorgioaresu.batchrenamer.MainActivity$1 -> com.giorgioaresu.batchrenamer.v:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$10 -> com.giorgioaresu.batchrenamer.w:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    com.giorgioaresu.batchrenamer.Rule_ListFragment getRuleListFragment() -> a
    com.giorgioaresu.batchrenamer.File_ListFragment getFileListFragment() -> b
    void setUiLoading() -> c
    void updateProgressInUI(java.lang.Integer) -> a
    void setUiResult() -> d
com.giorgioaresu.batchrenamer.MainActivity$11 -> com.giorgioaresu.batchrenamer.x:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void setUiLoading() -> a
    void setUiResult() -> b
    android.content.Context getContext() -> c
com.giorgioaresu.batchrenamer.MainActivity$2 -> com.giorgioaresu.batchrenamer.y:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$3 -> com.giorgioaresu.batchrenamer.z:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.MainActivity$4 -> com.giorgioaresu.batchrenamer.aa:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void onChanged() -> onChanged
com.giorgioaresu.batchrenamer.MainActivity$5 -> com.giorgioaresu.batchrenamer.ab:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$6 -> com.giorgioaresu.batchrenamer.ac:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$7 -> com.giorgioaresu.batchrenamer.ad:
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$8 -> com.giorgioaresu.batchrenamer.ae:
    android.widget.EditText val$input -> a
    org.json.JSONArray val$favorites -> b
    android.content.Context val$context -> c
    android.content.SharedPreferences val$prefs -> d
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$8$1 -> com.giorgioaresu.batchrenamer.af:
    com.giorgioaresu.batchrenamer.MainActivity$8 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$8$2 -> com.giorgioaresu.batchrenamer.ag:
    java.lang.String val$label -> a
    com.giorgioaresu.batchrenamer.MainActivity$8 this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$9 -> com.giorgioaresu.batchrenamer.ah:
    org.json.JSONArray val$favorites -> a
    android.content.Context val$context -> b
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.MainActivity$UpdatingFilenamesGuiHolder -> com.giorgioaresu.batchrenamer.ai:
    android.widget.TextView fileUpdatingLabel -> a
    android.widget.ProgressBar fileUpdatingProgress -> b
    android.view.View fileUpdatingGUI -> c
    com.giorgioaresu.batchrenamer.MainActivity this$0 -> d
com.giorgioaresu.batchrenamer.ManageFavoritesActivity -> com.giorgioaresu.batchrenamer.ManageFavoritesActivity:
    org.json.JSONArray favorites -> a
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$SectionsPagerAdapter mSectionsPagerAdapter -> b
    android.support.v4.view.ViewPager mViewPager -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void renameFavorite(int) -> a
    void showUndobarForRemovedFavorite(int) -> b
    void exportToFile(java.lang.String,java.lang.String) -> a
    void update(com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites) -> a
    void access$200(com.giorgioaresu.batchrenamer.ManageFavoritesActivity,int) -> a
    void access$400(com.giorgioaresu.batchrenamer.ManageFavoritesActivity,java.lang.String,org.json.JSONObject) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$1 -> com.giorgioaresu.batchrenamer.aj:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$2 -> com.giorgioaresu.batchrenamer.ak:
    android.widget.EditText val$input -> a
    android.content.Context val$context -> b
    int val$index -> c
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity this$0 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
    void addFav(java.lang.String) -> a
    void renameFav(java.lang.String,int) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$2$1 -> com.giorgioaresu.batchrenamer.al:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$2$2 -> com.giorgioaresu.batchrenamer.am:
    java.lang.String val$label -> a
    int val$duplicateIndex -> b
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$2 this$1 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$3 -> com.giorgioaresu.batchrenamer.an:
    int val$index -> a
    android.content.Context val$context -> b
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity this$0 -> c
    void onUndo(android.os.Parcelable) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog -> com.giorgioaresu.batchrenamer.ao:
    java.lang.String TAG -> a
    java.lang.String[] fileList -> b
    java.io.File currentPath -> c
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ListenerList fileListenerList -> d
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ListenerList dirListenerList -> e
    android.app.Activity activity -> h
    boolean selectDirectoryOption -> f
    java.lang.String fileEndsWith -> g
    void showDialog() -> a
    void loadFileList(java.io.File) -> a
    void access$1200(com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog,java.io.File) -> a
    void access$1300(com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog,java.io.File) -> b
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog$1 -> com.giorgioaresu.batchrenamer.ap:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog$2 -> com.giorgioaresu.batchrenamer.aq:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog$3 -> com.giorgioaresu.batchrenamer.ar:
    java.io.File val$file -> a
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog this$0 -> b
    void fireEvent(java.lang.Object) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog$4 -> com.giorgioaresu.batchrenamer.as:
    java.io.File val$directory -> a
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog this$0 -> b
    void fireEvent(java.lang.Object) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog$5 -> com.giorgioaresu.batchrenamer.at:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog this$0 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$FileDialog$FileSelectedListener -> com.giorgioaresu.batchrenamer.au:
    void fileSelected(java.io.File) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync -> com.giorgioaresu.batchrenamer.av:
    java.lang.Object syncToken -> a
    android.app.Activity context -> b
    java.lang.String readJSON -> c
    org.json.JSONArray imported -> d
    boolean[] selectedItems -> e
    boolean dialogCanceled -> f
    int mode -> g
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity this$0 -> h
    boolean doWait() -> a
    boolean tryReadSingleFav(java.lang.String) -> a
    boolean tryReadingMultipleFavs(java.lang.String) -> b
    int putCheckingDuplicatesRec(org.json.JSONArray,org.json.JSONArray,boolean[],int,int) -> a
    void importRename(org.json.JSONArray,org.json.JSONObject,java.lang.String) -> a
    java.lang.String loadJSONFromFile(java.io.File) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$500(com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync,java.io.File) -> a
    void access$600(com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$1 -> com.giorgioaresu.batchrenamer.aw:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync this$1 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$1$1 -> com.giorgioaresu.batchrenamer.ax:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$1 this$2 -> a
    void fileSelected(java.io.File) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2 -> com.giorgioaresu.batchrenamer.ay:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync this$1 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2$1 -> com.giorgioaresu.batchrenamer.az:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2$2 -> com.giorgioaresu.batchrenamer.ba:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2$3 -> com.giorgioaresu.batchrenamer.bb:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$2 this$2 -> a
    void onClick(android.content.DialogInterface,int,boolean) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3 -> com.giorgioaresu.batchrenamer.bc:
    java.lang.String val$itemName -> a
    int val$sourceCount -> b
    android.widget.CheckBox val$dontAsk -> c
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync this$1 -> d
    void run() -> run
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3$1 -> com.giorgioaresu.batchrenamer.bd:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3$2 -> com.giorgioaresu.batchrenamer.be:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3$3 -> com.giorgioaresu.batchrenamer.bf:
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ImportAsync$3 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ListenerList -> com.giorgioaresu.batchrenamer.bg:
    java.util.List listenerList -> a
    void fireEvent(com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ListenerList$FireHandler) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$ListenerList$FireHandler -> com.giorgioaresu.batchrenamer.bh:
    void fireEvent(java.lang.Object) -> a
com.giorgioaresu.batchrenamer.ManageFavoritesActivity$SectionsPagerAdapter -> com.giorgioaresu.batchrenamer.bi:
    android.content.Context c -> b
    com.giorgioaresu.batchrenamer.ManageFavoritesActivity this$0 -> c
    int getItemPosition$5d527804() -> d
    android.app.Fragment getItem(int) -> a
    int getCount() -> c
    java.lang.CharSequence getPageTitle(int) -> b
com.giorgioaresu.batchrenamer.RenameFiles_AsyncTask -> com.giorgioaresu.batchrenamer.bj:
    com.giorgioaresu.batchrenamer.RenameFiles_AsyncTask$renameFiles_Callbacks mListener -> a
    android.content.Context context -> b
    com.giorgioaresu.batchrenamer.RenamingNotification notification -> c
    int completed -> d
    int failed -> e
    java.lang.Object mLock -> f
    void onPreExecute() -> onPreExecute
    void onCancelled() -> onCancelled
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.giorgioaresu.batchrenamer.RenameFiles_AsyncTask$1 -> com.giorgioaresu.batchrenamer.bk:
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$File$RENAME -> a
com.giorgioaresu.batchrenamer.RenameFiles_AsyncTask$renameFiles_Callbacks -> com.giorgioaresu.batchrenamer.bl:
    void setUiLoading() -> a
    void setUiResult() -> b
    android.content.Context getContext() -> c
com.giorgioaresu.batchrenamer.RenameStatusActivity -> com.giorgioaresu.batchrenamer.RenameStatusActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onFileSelected(com.giorgioaresu.batchrenamer.File) -> a
com.giorgioaresu.batchrenamer.RenamingNotification -> com.giorgioaresu.batchrenamer.bm:
    long defaultWhen -> a
    void notify$74a4280f(android.content.Context,int,int,int,int) -> a
    void notifyCompleted(android.content.Context,int,int) -> a
    void notifyIndeterminate(android.content.Context) -> a
    void cancel(android.content.Context) -> b
com.giorgioaresu.batchrenamer.Rule -> com.giorgioaresu.batchrenamer.Rule:
    android.content.Context context -> a
    java.lang.String title -> b
    int viewId -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Map getRules(android.content.Context) -> a
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getNewName(java.lang.String,int,int,com.giorgioaresu.batchrenamer.Rule$ApplyTo) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    boolean isValid() -> a
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    java.lang.String checkForEmpty(java.lang.String) -> a
    java.lang.String getValueToString(boolean) -> a
    byte toByte(boolean) -> b
    com.giorgioaresu.batchrenamer.Rule createFromJSON(android.content.Context,org.json.JSONObject) -> a
    org.json.JSONObject dumpToJSON() -> c
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void updateRegexFieldsErrors(android.widget.EditText,android.widget.EditText) -> a
    int checkRegex$d386009(java.lang.String,java.lang.String) -> a
    void dumpToParcel$176e5455(android.os.Parcel) -> a
    void createFromParcel(android.os.Parcel) -> b
    int describeContents() -> describeContents
    void onInflate(android.view.View) -> c
com.giorgioaresu.batchrenamer.Rule$1 -> com.giorgioaresu.batchrenamer.bn:
    com.giorgioaresu.batchrenamer.Rule createFromParcel(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.giorgioaresu.batchrenamer.Rule$2 -> com.giorgioaresu.batchrenamer.bo:
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$Rule$RegexStatus -> a
com.giorgioaresu.batchrenamer.Rule$ApplyTo -> com.giorgioaresu.batchrenamer.bp:
    com.giorgioaresu.batchrenamer.Rule$ApplyTo NAME -> a
    com.giorgioaresu.batchrenamer.Rule$ApplyTo EXTENSION -> b
    com.giorgioaresu.batchrenamer.Rule$ApplyTo BOTH -> c
    int id -> d
    com.giorgioaresu.batchrenamer.Rule$ApplyTo[] $VALUES -> e
    com.giorgioaresu.batchrenamer.Rule$ApplyTo[] values() -> values
    com.giorgioaresu.batchrenamer.Rule$ApplyTo valueOf(java.lang.String) -> valueOf
    com.giorgioaresu.batchrenamer.Rule$ApplyTo getValue(int) -> a
    java.lang.String getLabel(android.content.Context,com.giorgioaresu.batchrenamer.Rule$ApplyTo) -> a
com.giorgioaresu.batchrenamer.Rule$RegexStatus -> com.giorgioaresu.batchrenamer.bq:
    int OK$30dc4a1c -> a
    int PATTERN_SYNTAX_ERROR$30dc4a1c -> b
    int GROUP_OUT_OF_BOUNDS$30dc4a1c -> c
    int[] $VALUES$6c60877 -> d
    int[] values$48ae4996() -> a
    java.lang.String errorStringPattern$1ac5888f(android.content.Context,int) -> a
    java.lang.String errorStringReplacement$1ac5888f(android.content.Context,int) -> b
com.giorgioaresu.batchrenamer.RuleAdapter -> com.giorgioaresu.batchrenamer.br:
    int layoutResource -> a
    com.giorgioaresu.batchrenamer.RuleAdapter$ruleAdapter_Callbacks mCallbacks -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setViewEnabled(android.view.View,boolean) -> a
com.giorgioaresu.batchrenamer.RuleAdapter$1 -> com.giorgioaresu.batchrenamer.bs:
    com.giorgioaresu.batchrenamer.RuleAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.giorgioaresu.batchrenamer.RuleAdapter$ViewHolder -> com.giorgioaresu.batchrenamer.bt:
    android.widget.TextView title -> a
    android.widget.ImageView imageView -> b
    com.giorgioaresu.batchrenamer.RuleAdapter this$0 -> c
com.giorgioaresu.batchrenamer.RuleAdapter$ruleAdapter_Callbacks -> com.giorgioaresu.batchrenamer.bu:
    void animateItemDeletion(android.view.View) -> a
com.giorgioaresu.batchrenamer.RuleEdit_Fragment -> com.giorgioaresu.batchrenamer.bv:
    com.giorgioaresu.batchrenamer.RuleEdit_Fragment$ruleEditFragment_Callbacks mListener -> a
    android.view.View dialogView -> b
    boolean isShowing -> c
    void show(android.app.FragmentManager,java.lang.String) -> show
    com.giorgioaresu.batchrenamer.RuleEdit_Fragment newInstance(com.giorgioaresu.batchrenamer.Rule) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.giorgioaresu.batchrenamer.RuleEdit_Fragment$ruleEditFragment_Callbacks -> com.giorgioaresu.batchrenamer.bw:
    void notifyRuleDataSetChanged() -> a
com.giorgioaresu.batchrenamer.Rule_ListFragment -> com.giorgioaresu.batchrenamer.Rule_ListFragment:
    android.util.SparseIntArray mItemIdTopMap -> b
    android.content.SharedPreferences sharedPrefs -> c
    java.lang.String title -> a
    java.util.ArrayList getRules() -> b
    void onPause() -> onPause
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    java.lang.String getNewName(java.lang.String,int,int) -> a
    org.json.JSONArray rulesToJSONArray() -> c
    void notifyRuleDataSetChanged() -> a
    android.view.View getAncestorOfView(android.view.View) -> b
    void setViewEnabled(android.view.View,boolean) -> a
    void animateItemDeletion(android.view.View) -> a
    void access$000(com.giorgioaresu.batchrenamer.Rule_ListFragment,android.widget.ListView,android.view.View) -> a
    android.util.SparseIntArray access$100(com.giorgioaresu.batchrenamer.Rule_ListFragment) -> a
    void access$200$37f13c21(com.giorgioaresu.batchrenamer.Rule_ListFragment,android.view.View) -> a
com.giorgioaresu.batchrenamer.Rule_ListFragment$1 -> com.giorgioaresu.batchrenamer.bx:
    com.giorgioaresu.batchrenamer.Rule_ListFragment this$0 -> a
    void onUndo(android.os.Parcelable) -> a
com.giorgioaresu.batchrenamer.Rule_ListFragment$2 -> com.giorgioaresu.batchrenamer.by:
    android.view.View val$view -> a
    android.widget.ListView val$lv -> b
    com.giorgioaresu.batchrenamer.Rule_ListFragment this$0 -> c
    void run() -> run
com.giorgioaresu.batchrenamer.Rule_ListFragment$3 -> com.giorgioaresu.batchrenamer.bz:
    android.view.View val$view -> a
    android.widget.ListView val$lv -> b
    com.giorgioaresu.batchrenamer.Rule_ListFragment this$0 -> c
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.giorgioaresu.batchrenamer.Rule_ListFragment$4 -> com.giorgioaresu.batchrenamer.ca:
    com.giorgioaresu.batchrenamer.Rule_ListFragment this$0 -> a
    void onUndo(android.os.Parcelable) -> a
com.giorgioaresu.batchrenamer.Rule_ListFragment$5 -> com.giorgioaresu.batchrenamer.cb:
    android.view.ViewTreeObserver val$observer -> a
    android.widget.ListView val$listview -> b
    com.giorgioaresu.batchrenamer.Rule_ListFragment this$0 -> c
    boolean onPreDraw() -> onPreDraw
com.giorgioaresu.batchrenamer.Rule_ListFragment$5$1 -> com.giorgioaresu.batchrenamer.cc:
    com.giorgioaresu.batchrenamer.Rule_ListFragment$5 this$1 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.Rule_ListFragment$5$2 -> com.giorgioaresu.batchrenamer.cd:
    com.giorgioaresu.batchrenamer.Rule_ListFragment$5 this$1 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.giorgioaresu.batchrenamer.Rule_ListFragment$5$3 -> com.giorgioaresu.batchrenamer.ce:
    com.giorgioaresu.batchrenamer.Rule_ListFragment$5 this$1 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.Rule_ListFragment$5$4 -> com.giorgioaresu.batchrenamer.cf:
    com.giorgioaresu.batchrenamer.Rule_ListFragment$5 this$1 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites -> com.giorgioaresu.batchrenamer.cg:
    com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites$updateFavorites mListener -> b
    com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites newInstance(java.util.ArrayList,com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites$updateFavorites) -> a
    void notifyRuleDataSetChanged() -> a
com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites$updateFavorites -> com.giorgioaresu.batchrenamer.ch:
    void update(com.giorgioaresu.batchrenamer.Rule_ListFragment$ForFavorites) -> a
com.giorgioaresu.batchrenamer.Rule_ListFragment$WithHorizontalPadding -> com.giorgioaresu.batchrenamer.ci:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.giorgioaresu.batchrenamer.SettingsActivity -> com.giorgioaresu.batchrenamer.SettingsActivity:
    android.preference.Preference$OnPreferenceChangeListener rememberRulesChangeListener -> a
    android.preference.Preference$OnPreferenceChangeListener debugModeChangeListener -> b
    android.preference.Preference$OnPreferenceChangeListener sBindPreferenceSummaryToValueListener -> c
    boolean isValidFragment(java.lang.String) -> isValidFragment
    void onPostCreate(android.os.Bundle) -> onPostCreate
    boolean onIsMultiPane() -> onIsMultiPane
    void onBuildHeaders(java.util.List) -> onBuildHeaders
com.giorgioaresu.batchrenamer.SettingsActivity$1 -> com.giorgioaresu.batchrenamer.cj:
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.giorgioaresu.batchrenamer.SettingsActivity$2 -> com.giorgioaresu.batchrenamer.ck:
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.giorgioaresu.batchrenamer.SettingsActivity$3 -> com.giorgioaresu.batchrenamer.cl:
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.giorgioaresu.batchrenamer.SuHelper -> com.giorgioaresu.batchrenamer.cm:
    int suStatus -> a
    boolean isSuAvailable() -> a
    void resetSuStatus() -> b
com.giorgioaresu.batchrenamer.UndoBarController -> com.giorgioaresu.batchrenamer.cn:
    android.view.View mBarView -> a
    android.widget.TextView mMessageView -> e
    android.view.ViewPropertyAnimator mBarAnimator -> f
    android.os.Handler mHideHandler -> g
    com.giorgioaresu.batchrenamer.UndoBarController$UndoListener mUndoListener -> b
    android.os.Parcelable mUndoToken -> c
    java.lang.CharSequence mUndoMessage -> d
    java.lang.Runnable mHideRunnable -> h
    void showUndoBar$4302e8d0(java.lang.CharSequence,android.os.Parcelable) -> a
    void hideUndoBar(boolean) -> a
com.giorgioaresu.batchrenamer.UndoBarController$1 -> com.giorgioaresu.batchrenamer.co:
    com.giorgioaresu.batchrenamer.UndoBarController this$0 -> a
    void onClick(android.view.View) -> onClick
com.giorgioaresu.batchrenamer.UndoBarController$2 -> com.giorgioaresu.batchrenamer.cp:
    com.giorgioaresu.batchrenamer.UndoBarController this$0 -> a
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.giorgioaresu.batchrenamer.UndoBarController$3 -> com.giorgioaresu.batchrenamer.cq:
    com.giorgioaresu.batchrenamer.UndoBarController this$0 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.UndoBarController$UndoListener -> com.giorgioaresu.batchrenamer.cr:
    void onUndo(android.os.Parcelable) -> a
com.giorgioaresu.batchrenamer.UpdateFileNames_AsyncTask -> com.giorgioaresu.batchrenamer.cs:
    android.app.Activity mActivity -> a
    com.giorgioaresu.batchrenamer.UpdateFileNames_AsyncTask$updateFileNames_Callbacks mListener -> b
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.giorgioaresu.batchrenamer.UpdateFileNames_AsyncTask$1 -> com.giorgioaresu.batchrenamer.ct:
    com.giorgioaresu.batchrenamer.UpdateFileNames_AsyncTask this$0 -> a
    void run() -> run
com.giorgioaresu.batchrenamer.UpdateFileNames_AsyncTask$updateFileNames_Callbacks -> com.giorgioaresu.batchrenamer.cu:
    com.giorgioaresu.batchrenamer.Rule_ListFragment getRuleListFragment() -> a
    com.giorgioaresu.batchrenamer.File_ListFragment getFileListFragment() -> b
    void updateProgressInUI(java.lang.Integer) -> a
    void setUiLoading() -> c
    void setUiResult() -> d
com.giorgioaresu.batchrenamer.rules.Add -> com.giorgioaresu.batchrenamer.rules.Add:
    java.lang.String text -> d
    int position -> e
    boolean backward -> f
    com.giorgioaresu.batchrenamer.Rule$ApplyTo applyTo -> g
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void createFromParcel(android.os.Parcel) -> b
    void dumpToParcel$176e5455(android.os.Parcel) -> a
com.giorgioaresu.batchrenamer.rules.ChangeCase -> com.giorgioaresu.batchrenamer.rules.ChangeCase:
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode caseMode -> d
    com.giorgioaresu.batchrenamer.Rule$ApplyTo applyTo -> e
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void createFromParcel(android.os.Parcel) -> b
    void dumpToParcel$176e5455(android.os.Parcel) -> a
com.giorgioaresu.batchrenamer.rules.ChangeCase$1 -> com.giorgioaresu.batchrenamer.rules.a:
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$rules$ChangeCase$CaseMode -> a
com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseManipulation -> com.giorgioaresu.batchrenamer.rules.b:
    java.lang.String toLowerCase(java.lang.String) -> a
    java.lang.String toToggleCase(java.lang.String) -> b
    java.lang.String toCamelCase(java.lang.String) -> c
    java.lang.String toSentenceCase(java.lang.String) -> d
com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode -> com.giorgioaresu.batchrenamer.rules.c:
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode UPPER -> a
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode LOWER -> b
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode CAMEL -> c
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode SENTENCE -> d
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode TOGGLE -> e
    int id -> f
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode[] $VALUES -> g
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode[] values() -> values
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode valueOf(java.lang.String) -> valueOf
    com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode getValue(int) -> a
    java.lang.String getLabel(android.content.Context,com.giorgioaresu.batchrenamer.rules.ChangeCase$CaseMode) -> a
com.giorgioaresu.batchrenamer.rules.Remove -> com.giorgioaresu.batchrenamer.rules.Remove:
    int characters -> d
    int position -> e
    boolean backward -> f
    com.giorgioaresu.batchrenamer.Rule$ApplyTo applyTo -> g
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void createFromParcel(android.os.Parcel) -> b
    void dumpToParcel$176e5455(android.os.Parcel) -> a
com.giorgioaresu.batchrenamer.rules.Renumber -> com.giorgioaresu.batchrenamer.rules.Renumber:
    int start -> d
    int step -> e
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode padMode -> f
    int padding -> g
    int position -> h
    boolean backward -> i
    com.giorgioaresu.batchrenamer.Rule$ApplyTo applyTo -> j
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void createFromParcel(android.os.Parcel) -> b
    void dumpToParcel$176e5455(android.os.Parcel) -> a
com.giorgioaresu.batchrenamer.rules.Renumber$1 -> com.giorgioaresu.batchrenamer.rules.d:
    android.widget.EditText val$mPadding -> a
    com.giorgioaresu.batchrenamer.rules.Renumber this$0 -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.giorgioaresu.batchrenamer.rules.Renumber$2 -> com.giorgioaresu.batchrenamer.rules.e:
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$rules$Renumber$PadMode -> a
com.giorgioaresu.batchrenamer.rules.Renumber$PadMode -> com.giorgioaresu.batchrenamer.rules.f:
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode AUTO -> a
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode MANUAL -> b
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode OFF -> c
    int id -> d
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode[] $VALUES -> e
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode[] values() -> values
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode valueOf(java.lang.String) -> valueOf
    com.giorgioaresu.batchrenamer.rules.Renumber$PadMode getValue(int) -> a
    java.lang.String getLabel(android.content.Context,com.giorgioaresu.batchrenamer.rules.Renumber$PadMode) -> a
com.giorgioaresu.batchrenamer.rules.Replace -> com.giorgioaresu.batchrenamer.rules.Replace:
    java.lang.String pattern -> d
    java.lang.Boolean regex -> e
    java.lang.String replacement -> f
    com.giorgioaresu.batchrenamer.Rule$ApplyTo applyTo -> g
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    boolean isValid() -> a
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    void onInflate(android.view.View) -> c
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void createFromParcel(android.os.Parcel) -> b
    void dumpToParcel$176e5455(android.os.Parcel) -> a
    void access$000(com.giorgioaresu.batchrenamer.rules.Replace,android.widget.EditText,android.widget.EditText) -> a
    void access$100(com.giorgioaresu.batchrenamer.rules.Replace,android.widget.EditText,android.widget.EditText) -> b
com.giorgioaresu.batchrenamer.rules.Replace$1 -> com.giorgioaresu.batchrenamer.rules.g:
    android.widget.EditText val$mPattern -> a
    android.widget.EditText val$mReplacement -> b
    com.giorgioaresu.batchrenamer.rules.Replace this$0 -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.giorgioaresu.batchrenamer.rules.Replace$2 -> com.giorgioaresu.batchrenamer.rules.h:
    android.widget.CheckBox val$mRegex -> a
    android.widget.EditText val$mPattern -> b
    android.widget.EditText val$mReplacement -> c
    com.giorgioaresu.batchrenamer.rules.Replace this$0 -> d
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.giorgioaresu.batchrenamer.rules.Whitespaces -> com.giorgioaresu.batchrenamer.rules.Whitespaces:
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar spaceChar -> d
    java.lang.Boolean reduceDuplicates -> e
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar replaceWith -> f
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim trim -> g
    com.giorgioaresu.batchrenamer.Rule$ApplyTo applyTo -> h
    java.lang.String getNewName(java.lang.String,int,int) -> a
    java.lang.String getPatchedString(java.lang.String,int,int) -> b
    java.lang.String rtrim(java.lang.String,char) -> a
    java.lang.String ltrim(java.lang.String,char) -> b
    boolean updateDataFromView(android.view.View) -> a
    boolean updateViewFromData(android.view.View) -> b
    java.lang.String getContentDescription() -> b
    org.json.JSONObject serializeToJSON() -> d
    void deserializeFromJSON(org.json.JSONObject) -> a
    void createFromParcel(android.os.Parcel) -> b
    void dumpToParcel$176e5455(android.os.Parcel) -> a
com.giorgioaresu.batchrenamer.rules.Whitespaces$1 -> com.giorgioaresu.batchrenamer.rules.i:
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$rules$Whitespaces$Trim -> a
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$rules$Whitespaces$SpaceChar -> b
    int[] $SwitchMap$com$giorgioaresu$batchrenamer$rules$Whitespaces$ReplaceChar -> c
com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar -> com.giorgioaresu.batchrenamer.rules.j:
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar NULL -> a
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar WHITESPACE -> b
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar UNDERSCORE -> c
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar MINUS_SIGN -> d
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar DOT -> e
    int id -> f
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar[] $VALUES -> g
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar[] values() -> values
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar valueOf(java.lang.String) -> valueOf
    com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar getValue(int) -> a
    java.lang.String getLabel(android.content.Context,com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar) -> a
    char getChar(com.giorgioaresu.batchrenamer.rules.Whitespaces$ReplaceChar) -> a
com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar -> com.giorgioaresu.batchrenamer.rules.k:
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar WHITESPACE -> a
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar UNDERSCORE -> b
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar MINUS_SIGN -> c
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar DOT -> d
    int id -> e
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar[] $VALUES -> f
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar[] values() -> values
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar valueOf(java.lang.String) -> valueOf
    com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar getValue(int) -> a
    java.lang.String getLabel(android.content.Context,com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar) -> a
    char getChar(com.giorgioaresu.batchrenamer.rules.Whitespaces$SpaceChar) -> a
    boolean compare(int) -> b
com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim -> com.giorgioaresu.batchrenamer.rules.l:
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim NO -> a
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim START -> b
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim END -> c
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim BOTH -> d
    int id -> e
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim[] $VALUES -> f
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim[] values() -> values
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim valueOf(java.lang.String) -> valueOf
    com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim getValue(int) -> a
    java.lang.String getLabel(android.content.Context,com.giorgioaresu.batchrenamer.rules.Whitespaces$Trim) -> a
eu.chainfire.libsuperuser.Debug -> a.a.a.a:
    boolean debug -> a
    int logTypes -> b
    eu.chainfire.libsuperuser.Debug$OnLogListener logListener -> c
    boolean sanityChecks -> d
    void logCommon(int,java.lang.String,java.lang.String) -> a
    void log(java.lang.String) -> a
    void logCommand(java.lang.String) -> b
    void logOutput(java.lang.String) -> c
    boolean getSanityChecksEnabledEffective() -> a
    boolean onMainThread() -> b
eu.chainfire.libsuperuser.Debug$OnLogListener -> a.a.a.b:
eu.chainfire.libsuperuser.Shell -> a.a.a.c:
    java.lang.String[] availableTestCommands -> a
    java.util.List run$3f01f0ae(java.lang.String,java.lang.String[]) -> a
    boolean parseAvailableResult$22871ece(java.util.List) -> a
eu.chainfire.libsuperuser.Shell$SU -> a.a.a.d:
    boolean available() -> a
eu.chainfire.libsuperuser.ShellOnMainThreadException -> a.a.a.e:
eu.chainfire.libsuperuser.StreamGobbler -> a.a.a.f:
    java.lang.String shell -> a
    java.io.BufferedReader reader -> b
    java.util.List writer -> c
    eu.chainfire.libsuperuser.StreamGobbler$OnLineListener listener -> d
    void run() -> run
eu.chainfire.libsuperuser.StreamGobbler$OnLineListener -> a.a.a.g:
